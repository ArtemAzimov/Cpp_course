Домашнее задание

Нужно написать класс работы с матрицами из int'ов.

Тип:
	using uint = unsigned int;

Конструкторы:
	Matrix(const uint width, const uint height);  // Создает матрицу width на height размера
	Matrix(const Matrix& other);                  // Конструктор копирования
	Matrix(Matrix&& other);                       // Конструктор перемещения

Операции:
	operator +  // складывает две матрицы
	operator -  // отнимает одну матрицу от другой
	operator << // сдвигает содержимое матрицы влево на указанное количество позиций
	operator >> // вправо
	operator ++ // увеличивает все элементы на 1
	operator -- // уменьшает
	operator ++(int) // постфиксно увеличивает все эл. на 1 
	operator --(int) // уменьшает
	
	operator [] // доступ к элементу по индексу (должно работать с m[x][y])
		если [] слишком сложно, то
	operator (int x, int y) // доступ к элементу по индексу (m(x, y)) 

Методы:
	void show(int width = 3, char fill_character = ' '); // Показывает всю матрицу
				                                         // Должно выводиться с применением
														 // манипуляторов setw() и setfill()

Опционально:
	Тип:
		using initializer_matrix = initializer_list<initializer_list<int>>;
	Конструктор:
		Matrix(initializer_matrix); // Инициализирует матрицу при инициализации сл. образом:
									// Matrix m = {
									// { 0, 1, 2, 3},
									// { 4, 5, 6, 7}
									// }
	Операции:
		operator - // унарный оператор минус. Делает -(array[i]) для каждого эл.
		operator + // унарный оператор плюс.  Делает +(array[i]) для каждого эл.

Пример сдвига:

До:
{{1, 2, 3, 4 },
 {5, 6, 7, 8 },
 {9, 0, 0, 0} }

m = m << 1

После:
{{2, 3, 4, 0 },
 {6, 7, 8, 0 },
 {0, 0, 0, 0 } }